# vim: set shiftwidth=4 softtabstop=4 expandtab:
#
# <div class="mt-8 mb-4">
# 
# ### Fields (automatic)
# 
# </div>
# 
# {% for property in site.data.provenance.v1_0.properties %}
# <p><code>{{property[0]}}</code></p>
# 
# <blockquote>{{property[1].description | markdownify}}</blockquote>
# 
# {% endfor %}
# 
$schema: https://json-schema.org/draft/2020-12/schema
$id: https://slsa.dev/provenance/v1.0.json
title: Provenance
type: object
description: |
    TODO

properties:
    buildDefinition:
        type: object
        description: |
            The information necessary and sufficient to:
            
            1.  Run the build, provided understanding of the build type and
                access to all referenced sources and dependencies.
            2.  Verify that the build was as expected.
            
            To ensure that the definition contains sufficient information to build, it
            is RECOMMENDED to architect the build system to use this definition as its
            sole top-level input.
            
            To ensure that the definition is practical to verify against expectations,
            it is RECOMMENDED to minimize the amount of information contained within
            this message. When possible, information SHOULD be moved to the definition
            of `type` (so that it is implicit in the build) or 
  
            -   MUST contain sufficient information for a downstream system to verify
                that the build definition meets some pre-defined expectation.
            
            This MUST contain sufficient information for a consumer to verify that the
            definiton matches some pre-defined expectation.
            
            This SHOULD contain sufficient information for the build system to (re)run
            the build 
            
            
            Ideally this SHOULD be the necessary and sufficient information to re-run
            the build
            SHOULD be minimal
            
            -   Complete: k
            -   Mininecessary 
  
        properties:
            type:
                type: string
            configSource:
                type: object
                properties:
                    digest:
                    uri:
                    entryPoint:
            parameters:
                type: object
            buildDependencies:
                type: array
                items:
                    type: object
                    property:
                        uri:
                            type: string
                        entryPoint:
                            type: string
  
    instanceMetadata:
        type: object
        description: no
